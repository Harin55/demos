# Copyright 2016 Open Source Robotics Foundation, Inc.
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

import os

from launch import LaunchDescriptor
from launch.exit_handler import default_exit_handler
from launch.launcher import DefaultLauncher
from launch_testing import create_handler


def setup():
    os.environ['OSPL_VERBOSITY'] = '8'  # 8 = OS_NONE


def test_executable():
    output_handlers = []

    launch_descriptor = LaunchDescriptor()

    showimage_executable = '@RCLCPP_DEMO_SHOWIMAGE_EXECUTABLE@'
    showimage_output_file = '@RCLCPP_DEMO_SHOWIMAGE_EXPECTED_OUTPUT@'
    showimage_name = 'test_showimage'
    showimage_handler = create_handler(showimage_name, launch_descriptor, showimage_output_file)
    assert showimage_handler, 'Cannot find appropriate handler for %s' % showimage_output_file
    output_handlers.append(showimage_handler)
    launch_descriptor.add_process(
        cmd=[showimage_executable, '-r', '0', '-s', '0'],
        name=showimage_name,
        exit_handler=default_exit_handler,
        output_handlers=[showimage_handler],
    )

    cam2image_executable = '@RCLCPP_DEMO_CAM2IMAGE_EXECUTABLE@'
    cam2image_output_file = '@RCLCPP_DEMO_CAM2IMAGE_EXPECTED_OUTPUT@'
    cam2image_name = 'test_cam2image'
    cam2image_handler = create_handler(cam2image_name, launch_descriptor, cam2image_output_file)
    assert cam2image_handler, 'Cannot find appropriate handler for %s' % cam2image_output_file
    output_handlers.append(cam2image_handler)
    launch_descriptor.add_process(
        cmd=[cam2image_executable, '-r', '0', '-s', '0', '-b'],
        name=cam2image_name,
        exit_handler=default_exit_handler,
        output_handlers=[cam2image_handler],
    )

    launcher = DefaultLauncher()
    launcher.add_launch_descriptor(launch_descriptor)
    rc = launcher.launch()

    assert rc == 0, \
        "The launch file failed with exit code '" + str(rc) + "'. " \
        'Maybe the client did not receive any messages?'

    for handler in output_handlers:
        handler.check()

if __name__ == '__main__':
    test_executable()
